@page "/createBranch"
@layout MainLayout
@attribute [StreamRendering]
@rendermode InteractiveServer
@using BLL.Services
@using Entities.Models
@using WebApp.Components.Layout
<PageTitle> Crear Sucursal</PageTitle>

<div class="row">
    <div class="card">
        <h6 class="card-title">Agregar Sucursal</h6>
        <div class="card-body">
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Nombre</label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" @bind="name" />
                </div>
            </div>



            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Dirección</label>
                <div class="col-sm-8">
                    <input type="text" class="form-control" @bind="address" />
                </div>
            </div>

            <div class="row mb-3">

                <div class="col-sm-8">
                    <button @onclick="SaveBranch" class="btn btn-outline-success">Guardar Sucursal</button>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Inject] BranchService branchService { get; set; }
    [Inject] AlertServices AlertServices { get; set; }
    [Inject] NavigationManager navigationManager { get; set; }
    private string name, address;
    private Branch? branch { get; set; }
    private async Task SaveBranch()
    {
        if (await validation())
        {
            branch = new()
                {
                    Name = name,
                    Address = address,
                    Status = true
                };

            var result = await branchService.SaveBranchAsync(branch);
            if (result)
            {
                await AlertServices.SweetAlertMessage("Guardado", "Sucursal Agregada,", SweetAlertIcon.Success, 1000);
                name = address = string.Empty;
                navigationManager.NavigateTo("branch");
            }
        }
    }

    private async Task<bool> validation()
    {
        if (string.IsNullOrEmpty(name))
        {
            await AlertServices.SweetAlertMessage("Validación", "El nombre de sucursal está vacío,", SweetAlertIcon.Warning, 1000);
            return false;
        }
        if (string.IsNullOrEmpty(address))
        {
            await AlertServices.SweetAlertMessage("Validación", "La dirección de sucursal está vacía,", SweetAlertIcon.Warning, 1000);
            return false;
        }
        return true;
    }

}
